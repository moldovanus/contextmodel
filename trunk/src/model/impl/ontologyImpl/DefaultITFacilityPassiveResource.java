package model.impl.ontologyImpl;

import edu.stanford.smi.protege.model.FrameID;
import edu.stanford.smi.protegex.owl.model.OWLModel;
import edu.stanford.smi.protegex.owl.model.RDFProperty;
import model.interfaces.resources.ITFacilityActiveResource;
import model.interfaces.resources.ITFacilityPassiveResource;

import java.util.Collection;
import java.util.Iterator;


/**
 * Generated by Protege-OWL  (http://protege.stanford.edu/plugins/owl).
 * Source OWL Class: http://www.semanticweb.org/ontologies/2010/6/ContextModel.owl#ITFacilityPassiveResource
 *
 * @version generated on Tue Jul 06 17:49:10 GMT 2010
 */
public class DefaultITFacilityPassiveResource extends DefaultServiceCenterITFacilityResource
        implements ITFacilityPassiveResource {

    public DefaultITFacilityPassiveResource(OWLModel owlModel, FrameID id) {
        super(owlModel, id);
    }


    public DefaultITFacilityPassiveResource() {
    }


    // Property http://www.semanticweb.org/ontologies/2010/6/ContextModel.owl#associatedActiveResources

    public Collection getAssociatedActiveResources() {
        return getPropertyValuesAs(getAssociatedActiveResourcesProperty(), ITFacilityActiveResource.class);
    }


    public RDFProperty getAssociatedActiveResourcesProperty() {
        final String uri = "http://www.semanticweb.org/ontologies/2010/6/ContextModel.owl#associatedActiveResources";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasAssociatedActiveResources() {
        return getPropertyValueCount(getAssociatedActiveResourcesProperty()) > 0;
    }


    public Iterator listAssociatedActiveResources() {
        return listPropertyValuesAs(getAssociatedActiveResourcesProperty(), ITFacilityActiveResource.class);
    }


    public void addAssociatedActiveResources(ITFacilityActiveResource newAssociatedActiveResources) {
        addPropertyValue(getAssociatedActiveResourcesProperty(), newAssociatedActiveResources);
    }


    public void removeAssociatedActiveResources(ITFacilityActiveResource oldAssociatedActiveResources) {
        removePropertyValue(getAssociatedActiveResourcesProperty(), oldAssociatedActiveResources);
    }


    public void setAssociatedActiveResources(Collection newAssociatedActiveResources) {
        setPropertyValues(getAssociatedActiveResourcesProperty(), newAssociatedActiveResources);
    }


    // Property http://www.semanticweb.org/ontologies/2010/6/ContextModel.owl#maximumValue

    public Double getMaximumValue() {
        return getPropertyValueLiteral(getMaximumValueProperty()).getDouble();
    }


    public RDFProperty getMaximumValueProperty() {
        final String uri = "http://www.semanticweb.org/ontologies/2010/6/ContextModel.owl#maximumValue";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasMaximumValue() {
        return getPropertyValueCount(getMaximumValueProperty()) > 0;
    }


    public void setMaximumValue(Double newMaximumValue) {
        setPropertyValue(getMaximumValueProperty(), new java.lang.Float(newMaximumValue));
    }


    // Property http://www.semanticweb.org/ontologies/2010/6/ContextModel.owl#minimumValue

    public Double getMinimumValue() {
        return getPropertyValueLiteral(getMinimumValueProperty()).getDouble();
    }


    public RDFProperty getMinimumValueProperty() {
        final String uri = "http://www.semanticweb.org/ontologies/2010/6/ContextModel.owl#minimumValue";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasMinimumValue() {
        return getPropertyValueCount(getMinimumValueProperty()) > 0;
    }


    public void setMinimumValue(Double newMinimumValue) {
        setPropertyValue(getMinimumValueProperty(), new java.lang.Float(newMinimumValue));
    }


    // Property http://www.semanticweb.org/ontologies/2010/6/ContextModel.owl#recordedValue

    public Double getRecordedValue() {
        if (hasRecordedValue()) {
            return getPropertyValueLiteral(getRecordedValueProperty()).getDouble();
        } else {
            return 0.0;
        }

    }


    public RDFProperty getRecordedValueProperty() {
        final String uri = "http://www.semanticweb.org/ontologies/2010/6/ContextModel.owl#recordedValue";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasRecordedValue() {
        return getPropertyValueCount(getRecordedValueProperty()) > 0;
    }


    public void setRecordedValue(Double newRecordedValue) {
        setPropertyValue(getRecordedValueProperty(), new java.lang.Float(newRecordedValue));
    }
}
