package model.impl.ontologyImpl;

import edu.stanford.smi.protege.model.FrameID;
import edu.stanford.smi.protegex.owl.model.OWLModel;
import edu.stanford.smi.protegex.owl.model.RDFProperty;
import model.interfaces.Event;
import model.interfaces.policies.ContextPolicy;
import model.interfaces.resources.ContextResource;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;


/**
 * Generated by Protege-OWL  (http://protege.stanford.edu/plugins/owl).
 * Source OWL Class: http://www.semanticweb.org/ontologies/2010/6/ContextModel.owl#ContextPolicy
 *
 * @version generated on Tue Jul 06 17:49:10 GMT 2010
 */
public class DefaultContextPolicy extends DefaultContextElement
        implements ContextPolicy {

    public DefaultContextPolicy(OWLModel owlModel, FrameID id) {
        super(owlModel, id);
    }


    public DefaultContextPolicy() {
    }

    // Property http://www.semanticweb.org/ontologies/2010/6/ContextModel.owl#policyWeight

    public float getPolicyWeight() {
        return getPropertyValueLiteral(getPolicyWeightProperty()).getFloat();
    }

    // Property http://www.semanticweb.org/ontologies/2010/6/ContextModel.owl#evaluationCondition

    public String getEvaluationCondition() {
        return (String) getPropertyValue(getEvaluationConditionProperty());
    }


    public RDFProperty getEvaluationConditionProperty() {
        final String uri = "http://www.semanticweb.org/ontologies/2010/6/ContextModel.owl#evaluationCondition";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasEvaluationCondition() {
        return getPropertyValueCount(getEvaluationConditionProperty()) > 0;
    }


    public void setEvaluationCondition(String newEvaluationCondition) {
        setPropertyValue(getEvaluationConditionProperty(), newEvaluationCondition);
    }


    // Property http://www.semanticweb.org/ontologies/2010/6/ContextModel.owl#isRespected

    public boolean isRespected() {
        return getIsRespected();
    }

    public boolean getIsRespected() {
        if (hasIsRespected()) {
            return getPropertyValueLiteral(getIsRespectedProperty()).getBoolean();
        } else {
            return false;
        }
    }

    public RDFProperty getIsRespectedProperty() {
        final String uri = "http://www.semanticweb.org/ontologies/2010/6/ContextModel.owl#isRespected";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasIsRespected() {
        return getPropertyValueCount(getIsRespectedProperty()) > 0;
    }


    public void setRespected(boolean newIsRespected) {
        setIsRespected(newIsRespected);
    }

    public void setIsRespected(boolean newIsRespected) {
        setPropertyValue(getIsRespectedProperty(), new java.lang.Boolean(newIsRespected));
    }


    // Property http://www.semanticweb.org/ontologies/2010/6/ContextModel.owl#policyName

    public String getPolicyName() {
        return (String) getPropertyValue(getPolicyNameProperty());
    }


    public RDFProperty getPolicyNameProperty() {
        final String uri = "http://www.semanticweb.org/ontologies/2010/6/ContextModel.owl#policyName";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasPolicyName() {
        return getPropertyValueCount(getPolicyNameProperty()) > 0;
    }


    public void setPolicyName(String newPolicyName) {
        setPropertyValue(getPolicyNameProperty(), newPolicyName);
    }


    // Property http://www.semanticweb.org/ontologies/2010/6/ContextModel.owl#policySubject

    public List<ContextResource> getPolicySubject() {
        return new ArrayList<ContextResource>(getPropertyValuesAs(getPolicySubjectProperty(), DefaultContextResource.class));
    }


    public RDFProperty getPolicySubjectProperty() {
        final String uri = "http://www.semanticweb.org/ontologies/2010/6/ContextModel.owl#policySubject";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasPolicySubject() {
        return getPropertyValueCount(getPolicySubjectProperty()) > 0;
    }


    public Iterator listPolicySubject() {
        return listPropertyValuesAs(getPolicySubjectProperty(), ContextResource.class);
    }


    public void addPolicySubject(ContextResource newPolicySubject) {
        addPropertyValue(getPolicySubjectProperty(), newPolicySubject);
    }


    public void removePolicySubject(ContextResource oldPolicySubject) {
        removePropertyValue(getPolicySubjectProperty(), oldPolicySubject);
    }


    public void setPolicySubject(List<ContextResource> newPolicySubject) {
        setPropertyValues(getPolicySubjectProperty(), newPolicySubject);
    }


    // Property http://www.semanticweb.org/ontologies/2010/6/ContextModel.owl#policyTarget

    public List<ContextResource> getPolicyTarget() {

        return new ArrayList(getPropertyValuesAs(getPolicyTargetProperty(), ContextResource.class));
    }


    public RDFProperty getPolicyTargetProperty() {
        final String uri = "http://www.semanticweb.org/ontologies/2010/6/ContextModel.owl#policyTarget";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasPolicyTarget() {
        return getPropertyValueCount(getPolicyTargetProperty()) > 0;
    }


    public Iterator listPolicyTarget() {
        return listPropertyValuesAs(getPolicyTargetProperty(), ContextResource.class);
    }


    public void addPolicyTarget(ContextResource newPolicyTarget) {
        addPropertyValue(getPolicyTargetProperty(), newPolicyTarget);
    }


    public void removePolicyTarget(ContextResource oldPolicyTarget) {
        removePropertyValue(getPolicyTargetProperty(), oldPolicyTarget);
    }


    public void setPolicyTarget(List<ContextResource> newPolicyTarget) {
        setPropertyValues(getPolicyTargetProperty(), newPolicyTarget);
    }

    public Event getTriggerEvent() {
        System.out.println("There is no event! -> class empty");
        return null;  //To change body of implemented methods use File | Settings | File Templates.
    }

    public void setTriggerEvent(Event event) {
        //To change body of implemented methods use File | Settings | File Templates.
        // Property http://www.semanticweb.org/ontologies/2010/6/ContextModel.owl#policyWeight
    }


    public RDFProperty getPolicyWeightProperty() {
        final String uri = "http://www.semanticweb.org/ontologies/2010/6/ContextModel.owl#policyWeight";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasPolicyWeight() {
        return getPropertyValueCount(getPolicyWeightProperty()) > 0;
    }


    public void setPolicyWeight(float newPolicyWeight) {
        setPropertyValue(getPolicyWeightProperty(), new java.lang.Float(newPolicyWeight));
    }
}
