package model.impl.ontologyImpl.policies;

import edu.stanford.smi.protege.model.FrameID;
import edu.stanford.smi.protegex.owl.model.OWLModel;
import edu.stanford.smi.protegex.owl.model.RDFProperty;
import model.interfaces.Goal;
import model.interfaces.actions.ContextAction;
import model.interfaces.policies.GPI_KPI_Policy;


/**
 * Generated by Protege-OWL  (http://protege.stanford.edu/plugins/owl).
 * Source OWL Class: http://www.semanticweb.org/ontologies/2010/6/ContextModel.owl#GPI_KPI_Policy
 *
 * @version generated on Tue Jul 06 17:49:10 GMT 2010
 */
public abstract class DefaultGPI_KPI_Policy extends DefaultContextPolicy
        implements GPI_KPI_Policy {

    private Goal policyGoal;

    public DefaultGPI_KPI_Policy(OWLModel owlModel, FrameID id) {
        super(owlModel, id);
    }


    public DefaultGPI_KPI_Policy() {
    }


    public abstract boolean isRespected();
//    {
//       throw new UnsupportedOperationException("Not implemented yet");
//    }

    public Goal getPolicyGoal() {
        return policyGoal;
    }

    public void setPolicyGoal(Goal policyGoal) {
        this.policyGoal = policyGoal;
    }

    // Property http://www.semanticweb.org/ontologies/2010/6/ContextModel.owl#policyAction

    public ContextAction getPolicyAction() {
        return (ContextAction) getPropertyValueAs(getPolicyActionProperty(), ContextAction.class);
    }


    public RDFProperty getPolicyActionProperty() {
        final String uri = "http://www.semanticweb.org/ontologies/2010/6/ContextModel.owl#policyAction";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasPolicyAction() {
        return getPropertyValueCount(getPolicyActionProperty()) > 0;
    }


    public void setPolicyAction(ContextAction newPolicyAction) {
        setPropertyValue(getPolicyActionProperty(), newPolicyAction);
    }

//    @Override
//    public boolean isRespected() {
//        Goal goal = getPolicyGoal();
//        if (goal == null) {
//            System.err.println("No goal specified for policy:" + this.getLocalName() + ". Returning isRespected = false");
//            return false;
//        }
//        for (ContextResource resource : getPolicySubject()) {
//            if (!goal.isAchieved((ITFacilityPassiveResource) resource)) {
//                return false;
//            }
//        }
//        return true;
//    }
}
