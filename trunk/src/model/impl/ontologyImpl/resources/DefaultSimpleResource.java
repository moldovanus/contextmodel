package model.impl.ontologyImpl.resources;

import edu.stanford.smi.protege.model.FrameID;
import edu.stanford.smi.protegex.owl.model.OWLModel;
import edu.stanford.smi.protegex.owl.model.RDFProperty;
import model.interfaces.ContextElement;
import model.interfaces.resources.SimpleResource;
import model.interfaces.resources.applications.ApplicationActivity;

import java.util.Collection;
import java.util.Iterator;


/**
 * Generated by Protege-OWL  (http://protege.stanford.edu/plugins/owl).
 * Source OWL Class: http://www.semanticweb.org/ontologies/2010/6/ContextModel.owl#SimpleResource
 *
 * @version generated on Tue Jul 06 17:49:10 GMT 2010
 */
public class DefaultSimpleResource extends DefaultServiceCenterITComputingResource
        implements SimpleResource {

    public DefaultSimpleResource(OWLModel owlModel, FrameID id) {
        super(owlModel, id);
    }


    public DefaultSimpleResource() {
    }


    // Property http://www.semanticweb.org/ontologies/2010/6/ContextModel.owl#partOf

    public Collection getPartOf() {
        return getPropertyValuesAs(getPartOfProperty(), ContextElement.class);
    }


    public RDFProperty getPartOfProperty() {
        final String uri = "http://www.semanticweb.org/ontologies/2010/6/ContextModel.owl#partOf";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasPartOf() {
        return getPropertyValueCount(getPartOfProperty()) > 0;
    }


    public Iterator listPartOf() {
        return listPropertyValuesAs(getPartOfProperty(), ContextElement.class);
    }


    public void addPartOf(ContextElement newPartOf) {
        addPropertyValue(getPartOfProperty(), newPartOf);
    }


    public void removePartOf(ContextElement oldPartOf) {
        removePropertyValue(getPartOfProperty(), oldPartOf);
    }


    public void setPartOf(Collection newPartOf) {
        setPropertyValues(getPartOfProperty(), newPartOf);
    }

    /**
     * @param activity activity to be run by this resoruce
     * @return always returns true. Override if specific behavior needed
     */
    public boolean hasResourcesFor(ApplicationActivity activity) {
        return true;
    }


    // Property http://www.semanticweb.org/ontologies/2010/6/ContextModel.owl#resourceWorkloadProperty

    public String getResourceWorkLoadProperty() {
        return (String) getPropertyValue(getResourceWorkloadPropertyProperty());
    }


    public RDFProperty getResourceWorkLoadPropertyProperty() {
        final String uri = "http://www.semanticweb.org/ontologies/2010/6/ContextModel.owl#resourceWorkloadProperty";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasResourceWorkLoadProperty() {
        return getPropertyValueCount(getResourceWorkloadPropertyProperty()) > 0;
    }


    public void setResourceWorkLoadProperty(String newResourceWorkloadProperty) {
        setPropertyValue(getResourceWorkloadPropertyProperty(), newResourceWorkloadProperty);
    }
}
