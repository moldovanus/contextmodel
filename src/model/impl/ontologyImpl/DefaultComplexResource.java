package model.impl.ontologyImpl;

import edu.stanford.smi.protege.model.FrameID;
import edu.stanford.smi.protegex.owl.model.OWLModel;
import edu.stanford.smi.protegex.owl.model.RDFProperty;
import model.interfaces.resources.ComplexResource;
import model.interfaces.resources.ServiceCenterITComputingResource;
import model.interfaces.resources.SimpleResource;

import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;
import java.util.List;


/**
 * Generated by Protege-OWL  (http://protege.stanford.edu/plugins/owl).
 * Source OWL Class: http://www.semanticweb.org/ontologies/2010/6/ContextModel.owl#ComplexResource
 *
 * @version generated on Tue Jul 06 17:49:10 GMT 2010
 */
public class DefaultComplexResource extends DefaultServiceCenterITComputingResource
        implements ComplexResource {

    public DefaultComplexResource(OWLModel owlModel, FrameID id) {
        super(owlModel, id);
    }

    public DefaultComplexResource() {
    }


    // Property http://www.semanticweb.org/ontologies/2010/6/ContextModel.owl#cpuResources

    public Collection getCpuResources() {
        return getPropertyValuesAs(getCpuResourcesProperty(), CPU.class);
    }


    public RDFProperty getCpuResourcesProperty() {
        final String uri = "http://www.semanticweb.org/ontologies/2010/6/ContextModel.owl#cpuResources";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasCpuResources() {
        return getPropertyValueCount(getCpuResourcesProperty()) > 0;
    }


    public Iterator listCpuResources() {
        return listPropertyValuesAs(getCpuResourcesProperty(), CPU.class);
    }


    public void addCpuResources(CPU newCpuResources) {
        addPropertyValue(getCpuResourcesProperty(), newCpuResources);
    }


    public void removeCpuResources(CPU oldCpuResources) {
        removePropertyValue(getCpuResourcesProperty(), oldCpuResources);
    }


    public void setCpuResources(Collection newCpuResources) {
        setPropertyValues(getCpuResourcesProperty(), newCpuResources);
    }


    // Property http://www.semanticweb.org/ontologies/2010/6/ContextModel.owl#hddResources

    public Collection getHddResources() {
        return getPropertyValuesAs(getHddResourcesProperty(), HDD.class);
    }


    public RDFProperty getHddResourcesProperty() {
        final String uri = "http://www.semanticweb.org/ontologies/2010/6/ContextModel.owl#hddResources";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasHddResources() {
        return getPropertyValueCount(getHddResourcesProperty()) > 0;
    }


    public Iterator listHddResources() {
        return listPropertyValuesAs(getHddResourcesProperty(), HDD.class);
    }


    public void addHddResources(HDD newHddResources) {
        addPropertyValue(getHddResourcesProperty(), newHddResources);
    }


    public void removeHddResources(HDD oldHddResources) {
        removePropertyValue(getHddResourcesProperty(), oldHddResources);
    }


    public void setHddResources(Collection newHddResources) {
        setPropertyValues(getHddResourcesProperty(), newHddResources);
    }


    // Property http://www.semanticweb.org/ontologies/2010/6/ContextModel.owl#memResources

    public Collection getMemResources() {
        return getPropertyValuesAs(getMemResourcesProperty(), MEM.class);
    }


    public RDFProperty getMemResourcesProperty() {
        final String uri = "http://www.semanticweb.org/ontologies/2010/6/ContextModel.owl#memResources";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasMemResources() {
        return getPropertyValueCount(getMemResourcesProperty()) > 0;
    }


    public Iterator listMemResources() {
        return listPropertyValuesAs(getMemResourcesProperty(), MEM.class);
    }


    public void addMemResources(MEM newMemResources) {
        addPropertyValue(getMemResourcesProperty(), newMemResources);
    }


    public void removeMemResources(MEM oldMemResources) {
        removePropertyValue(getMemResourcesProperty(), oldMemResources);
    }


    public void setMemResources(Collection newMemResources) {
        setPropertyValues(getMemResourcesProperty(), newMemResources);
    }


    // Property http://www.semanticweb.org/ontologies/2010/6/ContextModel.owl#resourceWorkloadProperty

    public List<String> getResourceWorkloadProperty() {
        return new ArrayList<String>(getPropertyValues(getResourceWorkloadPropertyProperty()));
    }

    public RDFProperty getResourceWorkloadPropertyProperty() {
        final String uri = "http://www.semanticweb.org/ontologies/2010/6/ContextModel.owl#resourceWorkloadProperty";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasResourceWorkloadProperty() {
        return getPropertyValueCount(getResourceWorkloadPropertyProperty()) > 0;
    }


    public Iterator listResourceWorkloadProperty() {
        return listPropertyValues(getResourceWorkloadPropertyProperty());
    }


    public void addResourceWorkloadProperty(String newResourceWorkloadProperty) {
        addPropertyValue(getResourceWorkloadPropertyProperty(), newResourceWorkloadProperty);
    }


    public void removeResourceWorkloadProperty(String oldResourceWorkloadProperty) {
        removePropertyValue(getResourceWorkloadPropertyProperty(), oldResourceWorkloadProperty);
    }


    public void setResourceWorkloadProperty(List<String> newResourceWorkloadProperty) {
        setResourceWorkloadProperty((Collection) newResourceWorkloadProperty);
    }

    public void setResourceWorkloadProperty(Collection newResourceWorkloadProperty) {
        setPropertyValues(getResourceWorkloadPropertyProperty(), newResourceWorkloadProperty);
    }


    // Property http://www.semanticweb.org/ontologies/2010/6/ContextModel.owl#simpleResources

    public List<ServiceCenterITComputingResource> getResources() {
        return new ArrayList<ServiceCenterITComputingResource>(getSimpleResources());
    }

    public Collection getSimpleResources() {
        return getPropertyValuesAs(getSimpleResourcesProperty(), SimpleResource.class);
    }

    public RDFProperty getSimpleResourcesProperty() {
        final String uri = "http://www.semanticweb.org/ontologies/2010/6/ContextModel.owl#simpleResources";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasSimpleResources() {
        return getPropertyValueCount(getSimpleResourcesProperty()) > 0;
    }


    public Iterator listSimpleResources() {
        return listPropertyValuesAs(getSimpleResourcesProperty(), SimpleResource.class);
    }


    public void addSimpleResources(SimpleResource newSimpleResources) {
        addPropertyValue(getSimpleResourcesProperty(), newSimpleResources);
    }


    public void removeSimpleResources(SimpleResource oldSimpleResources) {
        removePropertyValue(getSimpleResourcesProperty(), oldSimpleResources);
    }


    public void setResources(List<ServiceCenterITComputingResource> newSimpleResources) {
        setSimpleResources(newSimpleResources);
    }

    public void setSimpleResources(Collection newSimpleResources) {
        setPropertyValues(getSimpleResourcesProperty(), newSimpleResources);
    }
}
