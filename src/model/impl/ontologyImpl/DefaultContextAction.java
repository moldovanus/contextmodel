package model.impl.ontologyImpl;

import edu.stanford.smi.protege.model.FrameID;
import edu.stanford.smi.protegex.owl.model.OWLModel;
import edu.stanford.smi.protegex.owl.model.RDFProperty;
import model.impl.util.ModelAccess;
import model.interfaces.actions.ContextAction;
import model.interfaces.resources.ContextResource;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

/**
 * Generated by Protege-OWL  (http://protege.stanford.edu/plugins/owl).
 * Source OWL Class: http://www.semanticweb.org/ontologies/2010/6/ContextModel.owl#ContextAction
 *
 * @version generated on Tue Jul 06 17:49:10 GMT 2010
 */
public abstract class DefaultContextAction extends DefaultContextElement
        implements ContextAction {

    public DefaultContextAction(OWLModel owlModel, FrameID id) {
        super(owlModel, id);
    }


    public DefaultContextAction() {
    }

    /*

   // Property http://www.semanticweb.org/ontologies/2010/6/ContextModel.owl#activity

   public Collection getActivity() {
       return getPropertyValuesAs(getActivityProperty(), ApplicationActivity.class);
   }


   public RDFProperty getActivityProperty() {
       final String uri = "http://www.semanticweb.org/ontologies/2010/6/ContextModel.owl#activity";
       final String name = getOWLModel().getResourceNameForURI(uri);
       return getOWLModel().getRDFProperty(name);
   }


   public boolean hasActivity() {
       return getPropertyValueCount(getActivityProperty()) > 0;
   }


   public Iterator listActivity() {
       return listPropertyValuesAs(getActivityProperty(), ApplicationActivity.class);
   }


   public void addActivity(ApplicationActivity newActivity) {
       addPropertyValue(getActivityProperty(), newActivity);
   }


   public void removeActivity(ApplicationActivity oldActivity) {
       removePropertyValue(getActivityProperty(), oldActivity);
   }


   public void setActivities(List<ApplicationActivity> newActivities) {
      setActivity(newActivities);
   }
   public void setActivity(Collection newActivity) {
       setPropertyValues(getActivityProperty(), newActivity);
   }
    */
    /*
   // Property http://www.semanticweb.org/ontologies/2010/6/ContextModel.owl#associatedResources

   public List<ContextResource> getResources() {
       return new ArrayList<ContextResource>(getAssociatedResources());
   }
     public Collection getAssociatedResources() {
       return getPropertyValuesAs(getAssociatedResourcesProperty(), ContextResource.class);
   }

   public RDFProperty getAssociatedResourcesProperty() {
       final String uri = "http://www.semanticweb.org/ontologies/2010/6/ContextModel.owl#associatedResources";
       final String name = getOWLModel().getResourceNameForURI(uri);
       return getOWLModel().getRDFProperty(name);
   }


   public boolean hasAssociatedResources() {
       return getPropertyValueCount(getAssociatedResourcesProperty()) > 0;
   }


   public Iterator listAssociatedResources() {
       return listPropertyValuesAs(getAssociatedResourcesProperty(), ContextResource.class);
   }


   public void addAssociatedResources(ContextResource newAssociatedResources) {
       addPropertyValue(getAssociatedResourcesProperty(), newAssociatedResources);
   }


   public void removeAssociatedResources(ContextResource oldAssociatedResources) {
       removePropertyValue(getAssociatedResourcesProperty(), oldAssociatedResources);
   }


   public void setAssociatedResources(List<ContextResource> newAssociatedResources) {
       setAssociatedResources(newAssociatedResources);
   }
  public void setAssociatedResources(Collection newAssociatedResources) {
       setPropertyValues(getAssociatedResourcesProperty(), newAssociatedResources);
   }

    */

    // Property http://www.semanticweb.org/ontologies/2010/6/ContextModel.owl#resources

    public List<ContextResource> getResources() {
        return new ArrayList<ContextResource>(getPropertyValuesAs(getResourcesProperty(), ContextResource.class));
    }


    public RDFProperty getResourcesProperty() {
        final String uri = "http://www.semanticweb.org/ontologies/2010/6/ContextModel.owl#resources";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasResources() {
        return getPropertyValueCount(getResourcesProperty()) > 0;
    }


    public Iterator listResources() {
        return listPropertyValuesAs(getResourcesProperty(), ContextResource.class);
    }


    public void addResource(ContextResource newResources) {
        addPropertyValue(getResourcesProperty(), newResources);
    }


    public void removeResource(ContextResource oldResources) {
        removePropertyValue(getResourcesProperty(), oldResources);
    }


    public void setResources(List<ContextResource> newResources) {
        setPropertyValues(getResourcesProperty(), newResources);
    }

    public abstract void execute(ModelAccess modelAccess);

    public abstract void undo(ModelAccess modelAccess);
}
